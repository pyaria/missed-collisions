<!DOCTYPE html>
<html>
<head>
  <title>MissedCollisions</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js"></script>
  <script src="https://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js"></script>

  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>

  <link href="https://developers.google.com/maps/documentation/javascript/examples/default.css" rel="stylesheet">
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>

  <script>
  var geocoder;
  var map;
  var markers = [];
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: new google.maps.LatLng(49.265, -123.1),
      zoom: 14,
      minZoom: 10,
      maxZoom: 18
    });

    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.MarkerImage('/assets/transparent.png',
                                      new google.maps.Size(16, 16),
                                      new google.maps.Point(0, 0),
                                      new google.maps.Point(8, 8));

    function getPoints() {
      return $.ajax({
        method: 'GET',
        url: '~/incidents/new.json'
      });
    }

    var promise = getPoints();

    function addMarkers(marker){
      markers.push(marker)
    };


    promise.success(function(data){
      var dataPoints = [];
      for (var i = 0; i < data.length; i ++) {
        var latitude = parseFloat(data[i].latitude);
        var longitude = parseFloat(data[i].longitude);
        dataPoints.push(new google.maps.LatLng(latitude, longitude));
        var invisibleMarker = new google.maps.Marker({
                      position: {lat: latitude, lng: longitude},
                      map: map,
                      icon: marker
        })
        var time = data[i].reported_at.split("T");
        var formattedTime = time[1].split(":");
        var contentString = "<div id='heading'><p><strong>" + data[i].you +
                            "</strong> vs <strong>" + data[i].them +
                            "</strong></p></div><div id='inner'><p>" +
                            data[i].incident_type + "</p><p>" +
                            data[i].reported_on + " " +
                            formattedTime[0] + ":" + formattedTime[1] +
                            "</p></div>"
        attachInfowindow(invisibleMarker, contentString);
      }

      function attachInfowindow(marker, contentString) {
        var infowindow = new google.maps.InfoWindow({
          content: contentString
        })
        marker.addListener('mouseover', function(){
          infowindow.open(marker.get('map'), marker);
        })
        marker.addListener('mouseout', function(){
          infowindow.close(marker.get('map'), marker);
        })
        addMarkers(marker);

      }
      heatmap = new google.maps.visualization.HeatmapLayer({
        data: dataPoints,
        map: map
      });
      function toggleHeatmap() {
        heatmap.setMap(heatmap.getMap() ? null : map);
      };
    });

    $('button#heading').click(function(){
      $.ajax({
        method: "GET",
        url: "~/incidents/new.json",
        data: { you_car: $('#you-car').attr('data-value'),
                you_bike: $('#you-bike').attr('data-value'),
                you_pedestrian: $('#you-pedestrian').attr('data-value'),
                them_car: $('#them-car').attr('data-value'),
                them_bike: $('#them-bike').attr('data-value'),
                them_pedestrian: $('#them-pedestrian').attr('data-value'),
                them_road_hazard: $('#them-road-hazard').attr('data-value')
              },
        error: function() { alert("Please try again!") },
        success: function(data){
          var marker = new google.maps.MarkerImage('/assets/transparent.png',
                                            new google.maps.Size(16, 16),
                                            new google.maps.Point(0, 0),
                                            new google.maps.Point(8, 8));
          console.log(data);
          for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null)
          };
          markers = [];

          var dataPoints = [];
          for (var i = 0; i < data.length; i ++) {
            var latitude = parseFloat(data[i].latitude);
            var longitude = parseFloat(data[i].longitude);
            dataPoints.push(new google.maps.LatLng(latitude, longitude));
            var invisibleMarker = new google.maps.Marker({
                          position: {lat: latitude, lng: longitude},
                          map: map,
                          icon: marker
            })
            var time = data[i].reported_at.split("T");
            var formattedTime = time[1].split(":");
            var contentString = "<div id='heading'><p><strong>" + data[i].you +
                                "</strong> vs <strong>" + data[i].them +
                                "</strong></p></div><div id='inner'><p>" +
                                data[i].incident_type + "</p><p>" +
                                data[i].reported_on + " " +
                                formattedTime[0] + ":" + formattedTime[1] +
                                "</p></div>"
            attachInfowindow(invisibleMarker, contentString);
          }
          function attachInfowindow(marker, contentString) {
            var infowindow = new google.maps.InfoWindow({
              content: contentString
            })
            marker.addListener('mouseover', function(){
              infowindow.open(marker.get('map'), marker);
            })
            marker.addListener('mouseout', function(){
              infowindow.close(marker.get('map'), marker);
            })
            addMarkers(marker);
          }
          heatmap.setMap(null);
          heatmap = new google.maps.visualization.HeatmapLayer({
            data: dataPoints,
            map: map
          });
          function toggleHeatmap() {
            heatmap.setMap(heatmap.getMap() ? null : map);
          };
        }
      })
    })

    $('button#time').click(function(){
      var hours = $('#hour-scale').slider('option', "values");
      var months = $('#month-scale').slider('option', "values");
      $.ajax({
        method: "GET",
        url: "~/incidents/time.json",
        data: { hoursStart: hours[0],
                hoursEnd: hours[1],
                monthsStart: months[0],
                monthsEnd: months[1]
              },
        error: function() { alert("Please try again!") },
        success: function(data){
          var marker = new google.maps.MarkerImage('/assets/transparent.png',
                                            new google.maps.Size(16, 16),
                                            new google.maps.Point(0, 0),
                                            new google.maps.Point(8, 8));
          console.log(data);
          for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null)
          };
          markers = [];

          var dataPoints = [];
          for (var i = 0; i < data.length; i ++) {
            var latitude = parseFloat(data[i].latitude);
            var longitude = parseFloat(data[i].longitude);
            dataPoints.push(new google.maps.LatLng(latitude, longitude));
            var invisibleMarker = new google.maps.Marker({
                          position: {lat: latitude, lng: longitude},
                          map: map,
                          icon: marker
            })
            var time = data[i].reported_at.split("T");
            var formattedTime = time[1].split(":");
            var contentString = "<div id='heading'><p><strong>" + data[i].you +
                                "</strong> vs <strong>" + data[i].them +
                                "</strong></p></div><div id='inner'><p>" +
                                data[i].incident_type + "</p><p>" +
                                data[i].reported_on + " " +
                                formattedTime[0] + ":" + formattedTime[1] +
                                "</p></div>"
            attachInfowindow(invisibleMarker, contentString);
          }
          function attachInfowindow(marker, contentString) {
            var infowindow = new google.maps.InfoWindow({
              content: contentString
            })
            marker.addListener('mouseover', function(){
              infowindow.open(marker.get('map'), marker);
            })
            marker.addListener('mouseout', function(){
              infowindow.close(marker.get('map'), marker);
            })
            addMarkers(marker);
          }
          heatmap.setMap(null);
          heatmap = new google.maps.visualization.HeatmapLayer({
            data: dataPoints,
            map: map
          });
          function toggleHeatmap() {
            heatmap.setMap(heatmap.getMap() ? null : map);
          };
        }
      })
    })
  }

  </script>
   <!-- MODAL FOR SUBMITTING A REPORT -->
  <div class="modal fade report-an-incident" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <!-- <div class="modal-header" hidden="true"></div> -->
    <div class="modal-dialog modal-lg" >
      <div class="modal-content" id="incident-form" >
        <%= simple_form_for @incident, data: { behavior: "autosave" }, remote: true do |incident| %>
          <div id="incident">
            <div class="col-sm-6 form-group" id="incident-report">
              <div class="form-inline">
                <h1>Submit a Report!</h1>
                <div class="row">
                <div class='input-group date form-group' >
                  <%= incident.date_field :reported_on,
                                          placeholder: "Date",
                                          class: "form-control" %>
                </div>
                <div class='input-group time form-group' id='timepicker'>
                  <%= incident.time_field :reported_at,
                                          placeholder: "Time",
                                          class: "form-control" %>
                </div>
              </div>
              </div>
              <div class="form-inline">
                <%= incident.label :phone_email %>
                <%= incident.text_field :phone_email,
                                        placeholder: "Phone or Email (optional)",
                                        class: "form-control" %>
              </div>
              <div class="you">
                <%= incident.label :you %> &ensp;
                <%= incident.radio_button :you, "car" %>
                <%= incident.label :you, "car", value: "car" %> |
                <%= incident.radio_button :you, "bike" %>
                <%= incident.label :you, "bike", value: "bike" %> |
                <%= incident.radio_button :you, "pedestrian" %>
                <%= incident.label :you, "pedestrian", value: "pedestrian" %>

              </div>
              <div>
                <%= incident.label :them %>
                <%= incident.radio_button :them, "car" %>
                <%= incident.label :them, "car", value: "car" %> |
                <%= incident.radio_button :them, "bike" %>
                <%= incident.label :them, "bike", value: "bike" %> |
                <%= incident.radio_button :them, "pedestrian" %>
                <%= incident.label :them, "pedestrian", value: "pedestrian" %> |
                <%= incident.radio_button :them, "road hazard" %>
                <%= incident.label :them, "road hazard", value: "road hazard" %>
              </div>
              <div class="form-inline">
                <%= incident.label :incident_type %>
                <%= incident.text_field :incident_type,
                                        placeholder: "Eg. ran a red light, aggressive, distracted, ...",
                                        class: "form-control" %>
              </div>
              <div class="form-inline" id="location">
                  <%= incident.label :location %>
                  <%= incident.text_field :location,
                              placeholder: "Street address or cross streets",
                              class: "form-control" %>
                  <%= incident.hidden_field :latitude %>
                  <%= incident.hidden_field :longitude %>
                <button id="pin-on-map">Find on Map</button>
                <p></p>
              </div>
              <div class="form-inline">
                <%= incident.label :license %>
                <%= incident.text_field :license,
                                        placeholder: "License number (optional)",
                                        class: "form-control" %>
              </div>
            </div>
            <div class="col-md-6 form-group">
              <div id='map-for-mapping' class="invisible"></div>
              <div id="incident-details">
                <h1>Incident Details</h1>
                <%= incident.text_area :details,  class: "form-control",
                                                  rows: 20,
                                                  placeholder: "optional details" %>
              </div>
              <div id="submit-button">
                <%= incident.submit %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>


  <div class="sidebar thin flex">
    <button type="button" data-toggle="modal" data-target=".report-an-incident"
          id="report-an-accident">Report an Incident</button>
    <hr>
    <button id="heading">Filter by People</button>
    <div id="car" class="menu">
      <button class="menu" id="you-car" data-value="false"></button>
      <img src="/assets/car.png" class="filter">
      <button class="menu float-right" id="them-car" data-value="false">
      </button>
    </div>
    <div id="bike" class="menu">
      <button class="menu" id="you-bike" data-value="false"></button>
      <img src="/assets/bike.png" class="filter">
      <button class="menu float-right" id="them-bike" data-value="false">
      </button>
    </div>
    <div id="pedestrian" class="menu">
      <button class="menu" id="you-pedestrian" data-value="false"></button>
      <img src="/assets/pedestrian.png" class="filter">
      <button class="menu float-right" id="them-pedestrian" data-value="false">
      </button>
    </div>
    <div id="road_hazard" class="menu">
      <img src="/assets/road-hazard.png" class="filter" id="road-hazard">
      <button class="menu float-right" id="them-road-hazard" data-value="false">
      </button>
    </div>
    <hr>
    <div id="time-scale">
      <button id="time">Filter by Day/Time</button>
      <p class="scale"><strong>Hours</strong></p>
      <div id="hour-scale"></div>
      <p class="scale"><strong>Months</strong></p>
      <div id="month-scale"></div>
    </div>
    <div id="stats">
      <p><strong>Stats <a href="#"><img class="filter" src="/assets/stats.png"></a></strong></p>

    </div>
    <hr>
    <button class="wide-button" id="us">About Us</button>
    <div id="social-media">
    <a href="#"><img class="social" src="/assets/facebook.png"></a>
    <a href="#"><img class="social" src="/assets/twitter.png"></a>
    <a href="#"><img class="social" src="/assets/instagram.png"></a>
    <a href="#"><img class="social menu float-right" id="google" src="/assets/google.png"></a>
    </div>
  </div>

  <script>

  </script>
  <script>

    $(function() {
      $( "#hour-scale" ).slider({
        range: true,
        min: 0,
        orientation: "horizontal",
        max: 24,
        step: 1,
        values: [0, 24],
        slide: function(event, ui) {
          console.log(ui.values);
      }
    });
  });
    $(function() {
      $( "#month-scale" ).slider({
        range: true,
        min: 1,
        orientation: "horizontal",
        max: 12,
        step: 1,
        values: [0, 12],
        stop: function(event, ui) {
          console.log(ui.values);
        }
      });
    });
  </script>

  <script>

  </script>

  <!-- <script>
  $('button#time').click(function(){
    var hours = $('#hour-scale').slider('option', "values");
    var months = $('#month-scale').slider('option', "values");
    console.log(hours, months);
    $.ajax({
      method: "GET",
      url: "~/incidents/new.json",
      data: { hoursStart: hours[0],
              hoursEnd: hours[1],
              monthsStart: months[0],
              monthsEnd: months[1]
            },
      error: function() { alert("Please try again!") },
      success: function(data){
        var marker = new google.maps.MarkerImage('/assets/transparent.png',
                                          new google.maps.Size(16, 16),
                                          new google.maps.Point(0, 0),
                                          new google.maps.Point(8, 8));
        console.log(data);
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null)
        };
        markers = [];

        var dataPoints = [];
        for (var i = 0; i < data.length; i ++) {
          var latitude = parseFloat(data[i].latitude);
          var longitude = parseFloat(data[i].longitude);
          dataPoints.push(new google.maps.LatLng(latitude, longitude));
          var invisibleMarker = new google.maps.Marker({
                        position: {lat: latitude, lng: longitude},
                        map: map,
                        icon: marker
          })
          var time = data[i].reported_at.split("T");
          var formattedTime = time[1].split(":");
          var contentString = "<div id='heading'><p><strong>" + data[i].you +
                              "</strong> vs <strong>" + data[i].them +
                              "</strong></p></div><div id='inner'><p>" +
                              data[i].incident_type + "</p><p>" +
                              data[i].reported_on + " " +
                              formattedTime[0] + ":" + formattedTime[1] +
                              "</p></div>"
          attachInfowindow(invisibleMarker, contentString);
        }
        function attachInfowindow(marker, contentString) {
          var infowindow = new google.maps.InfoWindow({
            content: contentString
          })
          marker.addListener('mouseover', function(){
            infowindow.open(marker.get('map'), marker);
          })
          marker.addListener('mouseout', function(){
            infowindow.close(marker.get('map'), marker);
          })
          addMarkers(marker);
        }
        heatmap.setMap(null);
        heatmap = new google.maps.visualization.HeatmapLayer({
          data: dataPoints,
          map: map
        });
        function toggleHeatmap() {
          heatmap.setMap(heatmap.getMap() ? null : map);
        };
      }
    })
  })
  </script> -->
  <!-- ASYNCHRONOUS LOADING OF GOOGLE MAPS -->
  <script async defer src="https://maps.googleapis.com/maps/api/js?libraries=visualization&key=AIzaSyA4JPuZMXXvaQcoRbFbQpsUtGij2cHl1wc&callback=initMap">
  </script>



    <%= yield %>

</body>
</html>
