c
@months.count
@time.count
@hours.count
@hours
c
@hours.count
@hours
@hours.count
@months
@hours
c
a.count
a = @time
@time
c
params['monthsStart']
params[monthsStart]
params
c
params
c
params
c
Incident.where(sql_search_term.join(" OR "))
Incident.where(sql_search_term.join(" OR ")
sql_search_term
@incidents
c
blargh
c
blargh
c
search
c
params.length
params
@incidents
c
b
c
search
a = search.each { |array| array.each.join(" like ")}
a
a = search.each { |array| array.join(" like ")}
search.each { |array| array.join(" like ")}
search
filters
search
search = filters.map {|x| x.split("_")}
filters.map {|x| x.split("_")}
filters
c
filters
filters.map { |x| x.split("_") }
filters.each { |x| x.split("_") }
filters.each { |x|puts x.include? "you"}
filters.each { |x|puts x.include? "x"}
filters.each { |x| x.match("x")}
filters.each { |x| x.index("x")}
filters.each { |x| x.include? "x"}
filters.each {|x| puts x}
"abc".include? "d"
filters.each {|x| x.include? "them"}
filters.each {|x| x.include? "you"}
filters.include? "you"
filters
filters.include? "you"
filters.include? you
filters.include(you)?
filters.include("you")
"you" in filters
filters
      params.each { |k, v| filters.push(k + ":") if v == "true" }
filters = []
params["you_bike"]
filters
      params.each { |k, v| filters.push(k) if v == "true" }
filters = []
params.each {|k, v| puts v }
params.each {|k, v| puts k }
params.each {|p| puts p}
params.each {|p| p}
params
c
params["you_bike"]
c
params["you_bike"]
params.length
c
params.length
c
cc
c
params["them_car"]
params["you_pedestrian"]
params["you_bike"]
params["you_car"]
params"you_car"
c
params.length
params
c
params.length
params
c
params.length
params
c
params.length
params
c
@incidents
params
c
params["abc"]
params["abc"
params[abc]
params"abc"
params
c
n
@incident
c
a[0]
a
a = params[:incident][:latitude]
params[:incident][:latitude]
params[:incident]
params[incident]
params
params["latitude"]
params[latitude]
params[:latitude]
c
n
c
n
phone_email.match(/[a-z]/i).present?
phone_email.match(/[a-z]/i)
phone_email
c
stripped_pe.length > 11
stripped_pe.length
stripped_pe
stripped_pe = phone_email.gsub(/\W/, "")
phone_email
phone_email.gsub(/\W/, "")
phone_email
c
phone_email
stripped_pe.length
n
c
n
next
n
phone_email.present?
c
n
next
n
phone_email.match(/[a-z]/i)
phone_email.match(/[a-z]/i
phone_email
